package maria;

import haxe.Constraints.Function;
import js.node.events.EventEmitter.Event;

/**
 * Events of active query.
 * These events are generated by the EventEmitter object returned by the Connector.query().
 * Its needed for streaming processing large queries. Do not confuse with ConnectionEvent events. 
 * 
 * See documentation: <i>https://github.com/mariadb-corporation/mariadb-connector-nodejs/blob/master/documentation/callback-api.md#connectionquerysql-values-callback---emitter</i>
 * @author VolkovRA
 */
@:enum abstract QueryEvent<T:Function>(Event<T>) to Event<T> 
{
	/**
	 * Emits an Error object, when query failed.
	 */
	var ERROR:QueryEvent<SqlError->Void> = "error";
	
	/**
	 * Emits when columns metadata from result-set are received (parameter is an array of Metadata fields).
	 */
	var COLUMNS:QueryEvent<FieldInfo->Void> = "columns";
	
	/**
	 * Emits each time a row is received (parameter is a row).
	 */
	var DATA:QueryEvent<Dynamic->Void> = "data";
	
	/**
	 * Emits when the query ends (no parameter).
	 */
	var END:QueryEvent<Void->Void> = "end";
}